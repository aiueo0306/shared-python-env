
name: Shared RSS Workflow

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
        default: main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Download shared requirements
        run: curl -O https://raw.githubusercontent.com/aiueo0306/shared-python-env/main/requirements.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          playwright install chromium

      - name: Run all RSS scripts (with retry)
        run: |
          for script in RSS*.py; do
            echo "‚ñ∂ Running $script ..."
            success=false
            for i in 1; do
              python "$script" && { success=true; break; }
              echo "‚ö†Ô∏è  $script failed (attempt $i)"
              sleep 10
            done
            if [ "$success" = false ]; then
              echo "::error file=$script::${script} failed after 1 attempt"
              echo "$script failed after 1 attempt" >> errors.log
            fi
          done

      - name: Merge RSS feeds into combined.xml
        run: python merge_feeds.py

      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add rss_output/*.xml
          git commit -m "[bot] Update RSS feed" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin ${{ inputs.branch }}

      - name: Check for errors and mark job as failed
        run: |
          if [ -f errors.log ]; then
            echo "‚ùå The following RSS scripts failed:"
            cat errors.log
          else
            echo "‚úÖ All scripts completed successfully."
          fi

      - name: Collect detailed error info
        if: always()
        run: |
          if [ -f errors.log ]; then
            echo "script,site,url" > detailed_errors.csv
            while read -r line; do
              script=$(echo "$line" | cut -d' ' -f1)
              site=$(grep '^GAKKAI' "$script" | sed -E 's/.*"([^"]+)".*/\1/' || echo "")
              url=$(grep '^BASE_URL' "$script" | sed -E 's/.*"([^"]+)".*/\1/' || echo "")
              echo "$script,$site,$url" >> detailed_errors.csv
            done < errors.log
          fi

      - name: Comment failed scripts to issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'detailed_errors.csv';
            if (!fs.existsSync(path)) return;
      
            const issueTitle = "üö® RSS script failure";
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            });
      
            let existing = issues.find(issue => issue.title === issueTitle);
            if (!existing) {
              const { data: issue } = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: "Tracking RSS script failures"
              });
              existing = issue;
            }
      
            const lines = fs.readFileSync(path, 'utf8').split('\n').slice(1);
            let body = "‚ùå RSS script failed:\n\n";
            for (const line of lines) {
              if (!line.trim()) continue;
              const [script, site, url] = line.split(',');
              body += `- \`${script}\` failed\n`;
              if (site) body += `  - „Çµ„Ç§„ÉàÂêç: ${site}\n`;
              if (url)  body += `  - URL: ${url}\n`;
              body += `\n`;
            }
      
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existing.number,
              body
            });

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts
          path: |
            ${{ github.workspace }}/page.html
            ${{ github.workspace }}/screenshot.png
